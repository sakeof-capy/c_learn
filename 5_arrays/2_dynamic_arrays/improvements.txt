# 1.
    In find_maximal_elem_of_array() and find_minimal_elem_of_array() handle the case 
of inputing zero-length array;
    Modify the return value type so that the functions return both maximal/minimal element
and error code (0 - success, 1 - error);

# 2.
    Read Bublick's book and try to understand how arrays work under the hood and are passed
to functions as parameters;
    Find out why the arrays are just pointers to their first elements; 
    Get to know how indexation works (under-hood meaning of array[i]);

# 3. DONE
    Having a separate .c file for each function is an overkill, 
    so merge the following files into a single one:
        find_maximal_elem_of_array.c, 
        find_minimal_elem_of_array.c, 
        reverse_array_of_integers.c,
        sum_elements_of_array.c.

    Furthermore, follow the convention of keeping the same name for both .h and .c files
    such that the .c file contains the definitions of the functions declared in the .h file;

# 4. 
    Try to understand how malloc() and free() work; 
        Note: there must be exactly one call of free() function for each call of malloc() function;
        Otherwise it results in memory leak or segmentation fault;






